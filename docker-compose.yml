version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"


  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    #command: opt/kafka_2.12-2.4.1/bin/kafka-server-start.sh opt/kafka_2.12-2.4.1//config/server.properties
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_BROKER_ID: 1

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

    depends_on:
      - zookeeper


  hbase:
    image: harisekhon/hbase
    links:
      - zookeeper
    logging:
      driver: "none"
    ports:
      - "9090:9090"
      - "16010:16010"
    # expose:
    #   - "8080"
    #   - "9090"
    #   - "16000"
    #   - "16010"
    #   - "16020"
    #   - "16030"
    # command: ["/wait-for-it.sh", "zookeeper:2181", "-t", "10", "--", "/usr/bin/supervisord"]

  app:
    tty: true
    image: python3.6-slim
    #build: .
    # т.к. kafka после запуска машины запускается не сразу, то необходим скрипт
    # wait-for-it.sh который будет слушать порт 9093 и выполнит запрос написаннвй после --
    # убирание из скрипта \r (специфика винды)
    # и запуск скрипта wait-for-it с командой запуска воркера
    command: bash -c "sed $$'s/\\r$$//' ./wait-for-it.sh > ./wait-for-it.unix.sh
     &&
      ./wait-for-it.unix.sh kafka:9093 -- faust -A test worker -l info"
    external_links:
      - faust_kafka_1:kafka
    depends_on:
      - kafka
      # - zookeeper
      # - schema-registry
    ports:
      - "8084:80"
      - "8000:8000"
    volumes:
      - ./.:/application
      #- app-python-site-packages:/usr/local/lib/python3.6/site-packages
      #- app-usr-local-bin:/usr/local/bin
      #- worker-data:/data/
  # schema-registry:
  #   image: confluentinc/cp-schema-registry
  #   hostname: schema-registry
  #   container_name: schema-registry
  #   depends_on:
  #     - kafka
  #     - zookeeper
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
  #     - SCHEMA_REGISTRY_HOST_NAME=sche

volumes:
  app-python-site-packages:
    driver: local
  app-usr-local-bin:
    driver: local
  worker-data:
    driver: local
